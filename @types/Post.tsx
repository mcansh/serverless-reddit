// Generated by https://quicktype.io

export interface Subreddit {
  kind: string;
  data: SubredditData;
}

export interface SubredditData {
  modhash: string;
  dist: number;
  children: Child[];
  after: string;
  before: undefined;
}

export interface Child {
  kind: Kind;
  data: Post;
}

export interface Post {
  approved_at_utc: undefined;
  subreddit: string;
  selftext: string;
  author_fullname: string;
  saved: boolean;
  mod_reason_title: undefined;
  gilded: number;
  clicked: boolean;
  title: string;
  link_flair_richtext: FlairRichtext[];
  subreddit_name_prefixed: string;
  hidden: boolean;
  pwls: undefined;
  link_flair_css_class: undefined | string;
  downs: number;
  hide_score: boolean;
  name: string;
  quarantine: boolean;
  link_flair_text_color: FlairTextColor;
  author_flair_background_color: undefined | string;
  subreddit_type: SubredditType;
  ups: number;
  total_awards_received: number;
  media_embed: MediaEmbed;
  author_flair_template_id: undefined | string;
  is_original_content: boolean;
  user_reports: any[];
  secure_media: Media | undefined;
  is_reddit_media_domain: boolean;
  is_meta: boolean;
  category: undefined;
  secure_media_embed: MediaEmbed;
  link_flair_text: undefined | string;
  can_mod_post: boolean;
  score: number;
  approved_by: undefined;
  thumbnail: string;
  edited: boolean;
  author_flair_css_class: undefined | string;
  steward_reports: any[];
  author_flair_richtext: FlairRichtext[];
  gildings: Gildings;
  content_categories: undefined;
  is_self: boolean;
  mod_note: undefined;
  created: number;
  link_flair_type: AuthorFlairType;
  wls: undefined;
  banned_by: undefined;
  author_flair_type: AuthorFlairType;
  domain: string;
  allow_live_comments: boolean;
  selftext_html: undefined | string;
  likes: undefined;
  suggested_sort: undefined;
  banned_at_utc: undefined;
  view_count: undefined;
  archived: boolean;
  no_follow: boolean;
  is_crosspostable: boolean;
  pinned: boolean;
  over_18: boolean;
  all_awardings: AllAwarding[];
  media_only: boolean;
  link_flair_template_id?: string;
  can_gild: boolean;
  spoiler: boolean;
  locked: boolean;
  author_flair_text: undefined | string;
  visited: boolean;
  num_reports: undefined;
  distinguished: undefined | string;
  subreddit_id: string;
  mod_reason_by: undefined;
  removal_reason: undefined;
  link_flair_background_color: LinkFlairBackgroundColor;
  id: string;
  is_robot_indexable: boolean;
  report_reasons: undefined;
  author: string;
  num_crossposts: number;
  num_comments: number;
  send_replies: boolean;
  whitelist_status: undefined;
  contest_mode: boolean;
  mod_reports: any[];
  author_patreon_flair: boolean;
  author_flair_text_color: FlairTextColor | undefined;
  permalink: string;
  parent_whitelist_status: undefined;
  stickied: boolean;
  url: string;
  subreddit_subscribers: number;
  created_utc: number;
  discussion_type: undefined;
  media: Media | undefined;
  is_video: boolean;
}

export interface AllAwarding {
  count: number;
  is_enabled: boolean;
  subreddit_id: undefined;
  description: string;
  end_date: undefined;
  coin_reward: number;
  icon_url: string;
  days_of_premium: number;
  id: string;
  icon_height: number;
  resized_icons: ResizedIcon[];
  days_of_drip_extension: number;
  award_type: string;
  start_date: undefined;
  coin_price: number;
  icon_width: number;
  subreddit_coin_reward: number;
  name: string;
}

export interface ResizedIcon {
  url: string;
  width: number;
  height: number;
}

export interface FlairRichtext {
  e: AuthorFlairType;
  t: string;
}

export enum AuthorFlairType {
  Richtext = 'richtext',
  Text = 'text',
}

export enum FlairTextColor {
  Dark = 'dark',
}

export interface Gildings {
  gid_1?: number;
}

export enum LinkFlairBackgroundColor {
  Dadada = '#dadada',
  Empty = '',
}

export interface Media {
  reddit_video?: RedditVideo;
  type?: string;
  oembed?: Oembed;
}

export interface Oembed {
  provider_url: string;
  version: string;
  title: string;
  type: string;
  thumbnail_width: number;
  height: number;
  width: number;
  html: string;
  author_name: string;
  provider_name: string;
  thumbnail_url: string;
  thumbnail_height: number;
  author_url: string;
}

export interface RedditVideo {
  fallback_url: string;
  height: number;
  width: number;
  scrubber_media_url: string;
  dash_url: string;
  duration: number;
  hls_url: string;
  is_gif: boolean;
  transcoding_status: string;
}

export interface MediaEmbed {
  content?: string;
  width?: number;
  scrolling?: boolean;
  height?: number;
  media_domain_url?: string;
}

export enum SubredditType {
  Public = 'public',
}

export enum Kind {
  T3 = 't3',
}
